/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package se.gui;

/**
 *
 * @author braya
 */

import se.model.TablaID3;
import javax.swing.*;
import javax.swing.table.*;
import java.awt.*;
import java.util.List;

public class PanelTabla extends javax.swing.JPanel {

    /**
     * Creates new form PanelTabla
     */
    
    private JTable tabla;
    private DefaultTableModel modeloTabla;
    private TablaID3 datosID3;
    
    public PanelTabla() {
        setLayout(new BorderLayout());
        inicializarComponentes();
    }
    
    private void inicializarComponentes() {
        modeloTabla = new DefaultTableModel();
        tabla = new JTable(modeloTabla);
        tabla.setFillsViewportHeight(true);
        tabla.setRowHeight(25);  // Filas más altas
        tabla.setIntercellSpacing(new Dimension(10, 5));  // Más espacio entre celdas
        tabla.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        tabla.getTableHeader().setReorderingAllowed(false);
        tabla.getTableHeader().setFont(tabla.getTableHeader().getFont().deriveFont(Font.BOLD));

        JScrollPane scrollPane = new JScrollPane(tabla);
        scrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
        scrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);

        setLayout(new BorderLayout());
        add(scrollPane, BorderLayout.CENTER);
    }
    
    public void cargarDatos(TablaID3 datos) {
        this.datosID3 = datos;
        actualizarTabla();
    }
    
    private void actualizarTabla() {
        modeloTabla.setRowCount(0);
        modeloTabla.setColumnCount(0);

        // Agregar columnas
        for (String columna : datosID3.getColumnas()) {
            modeloTabla.addColumn(columna);
        }

        // Agregar filas
        for (List<String> fila : datosID3.getDatos()) {
            Object[] arrayFila = fila.toArray();
            modeloTabla.addRow(arrayFila);
        }
    }
    
    public TablaID3 getDatosID3() {
        return datosID3;
    }
    
    public void resaltarColumnaObjetivo(int columna) {
        DefaultTableCellRenderer renderer = new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(
                JTable table, Object value, boolean isSelected, 
                boolean hasFocus, int row, int column) {
                Component c = super.getTableCellRendererComponent(
                    table, value, isSelected, hasFocus, row, column);
                if (column == columna) {
                    setBackground(new Color(217, 237, 247));  // Azul más claro
                    setForeground(Color.BLACK);
                    setFont(getFont().deriveFont(Font.BOLD));
                } else {
                    setBackground(table.getBackground());
                    setForeground(table.getForeground());
                    setFont(table.getFont());
                }
                return this;
            }
        };

        // Aplicar renderer a todas las columnas primero
        for (int i = 0; i < tabla.getColumnCount(); i++) {
            tabla.getColumnModel().getColumn(i).setCellRenderer(
                new DefaultTableCellRenderer()
            );
        }

        // Aplicar renderer especial a la columna objetivo
        tabla.getColumnModel().getColumn(columna).setCellRenderer(renderer);
        tabla.repaint();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
